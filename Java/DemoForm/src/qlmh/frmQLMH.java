/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package qlmh;

import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author yushu
 */
public class frmQLMH extends javax.swing.JFrame {

    /**
     * Creates new form frmQLMH
     */
    private DSMonHoc ds = new DSMonHoc();

    public frmQLMH() {
        initComponents();
        this.setLocationRelativeTo(null);
        hienThi();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtMaMon = new javax.swing.JTextField();
        txtTenMon = new javax.swing.JTextField();
        txtSoTC = new javax.swing.JTextField();
        btnThem = new javax.swing.JButton();
        btnTim = new javax.swing.JButton();
        btnXoa = new javax.swing.JButton();
        btnMoi = new javax.swing.JButton();
        btnSua = new javax.swing.JButton();
        txtTim = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblQL = new javax.swing.JTable();
        cboTieuChi = new javax.swing.JComboBox<>();
        btnThoat = new javax.swing.JButton();
        lblTB = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setText("Quản lý môn học");

        jLabel2.setText("Mã môn học:");

        jLabel3.setText("Tên môn học:");

        jLabel4.setText("Số tín chỉ:");

        jLabel5.setText("Sắp xếp danh sách:");

        btnThem.setText("Thêm");
        btnThem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemActionPerformed(evt);
            }
        });

        btnTim.setText("Tìm");
        btnTim.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTimActionPerformed(evt);
            }
        });

        btnXoa.setText("Xóa");
        btnXoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaActionPerformed(evt);
            }
        });

        btnMoi.setText("Mới");
        btnMoi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMoiActionPerformed(evt);
            }
        });

        btnSua.setText("Sửa");
        btnSua.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSuaActionPerformed(evt);
            }
        });

        tblQL.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tblQL.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblQLMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblQL);

        cboTieuChi.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Mã môn học", "Tên môn học", "Số tín chỉ", " " }));
        cboTieuChi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboTieuChiActionPerformed(evt);
            }
        });

        btnThoat.setText("Thoát");
        btnThoat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThoatActionPerformed(evt);
            }
        });

        lblTB.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel4)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jLabel2)
                            .addGap(40, 40, 40)
                            .addComponent(txtMaMon, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(btnTim)
                        .addComponent(lblTB))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(36, 36, 36)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtSoTC)
                            .addComponent(txtTenMon)
                            .addComponent(txtTim, javax.swing.GroupLayout.DEFAULT_SIZE, 152, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnThem)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnXoa)
                        .addGap(18, 18, 18)
                        .addComponent(btnSua)
                        .addGap(18, 18, 18)
                        .addComponent(btnMoi)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 33, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 416, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jLabel5)
                            .addGap(26, 26, 26)
                            .addComponent(cboTieuChi, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnThoat))))
                .addGap(63, 63, 63))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(jLabel1)
                .addGap(32, 32, 32)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnThoat)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel2)
                                    .addComponent(txtMaMon, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(22, 22, 22)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel3)
                                    .addComponent(txtTenMon, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(22, 22, 22)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel4)
                                    .addComponent(txtSoTC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(btnTim)
                                    .addComponent(txtTim, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(10, 10, 10)
                                .addComponent(lblTB)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(btnThem)
                                    .addComponent(btnXoa)
                                    .addComponent(btnSua)
                                    .addComponent(btnMoi)))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 211, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel5)
                            .addComponent(cboTieuChi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(17, Short.MAX_VALUE))
        );

        jLabel1.getAccessibleContext().setAccessibleName("Quản lý môn học");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnXoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaActionPerformed
        // TODO add your handling code here:
        txtTim.setText("");
        try {
            if (txtMaMon.getText().length() != 0) {
                int result = JOptionPane.showConfirmDialog(null, "Bạn có muốn xoá không",
                        "Thông báo", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
                if (result == JOptionPane.YES_OPTION) {
                    MonHoc mh = new MonHoc();
                    mh.setMaMonHoc(txtMaMon.getText());
                    mh.setTenMonHoc(txtTenMon.getText());
                    mh.setSoTinChi(Integer.parseInt(txtSoTC.getText().trim()));
                    ds.xoaMonHoc(mh);
                    hienThi();
                    txtMaMon.setText("");
                    txtTenMon.setText("");
                    txtSoTC.setText(null);
                    txtMaMon.requestFocus();
                } else {
                    this.requestFocus();
                }
            } else {
                JOptionPane.showMessageDialog(null, "Vui lòng chọn môn học");
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, ex.getMessage());
        }


    }//GEN-LAST:event_btnXoaActionPerformed

    private void btnThemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemActionPerformed
        // TODO add your handling code here:
        txtTim.setText("");
        if (txtMaMon.getText().length() != 0 && txtTenMon.getText().length() != 0) {
            if (!checkTinChi(txtSoTC.getText())) {
                JOptionPane.showMessageDialog(null, "Số tín chỉ không hợp lệ");
            } else {
                if (ds.timKiem(txtMaMon.getText())) {
                    JOptionPane.showMessageDialog(null, "Đã tồn tại mã môn học này");
                    txtMaMon.requestFocus();
                } else {
                    MonHoc mh = new MonHoc();
                    mh.setMaMonHoc(txtMaMon.getText());
                    mh.setTenMonHoc(txtTenMon.getText());
                    mh.setSoTinChi(Integer.parseInt(txtSoTC.getText()));
                    ds.themMonHoc(mh);
                    txtMaMon.setText("");
                    txtTenMon.setText("");
                    txtSoTC.setText(null);
                    txtMaMon.requestFocus();
                    hienThi();
                }
            }
        } else {
            JOptionPane.showMessageDialog(null, "Vui lòng điền đầy đủ thông tin");
        }
    }//GEN-LAST:event_btnThemActionPerformed

    private void btnSuaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSuaActionPerformed
        // TODO add your handling code here:
        txtTim.setText("");
        try {
            if (txtMaMon.getText().length() != 0 && txtTenMon.getText().length() != 0) {
                if (!checkTinChi(txtSoTC.getText())) {
                    JOptionPane.showMessageDialog(null, "Số tín chỉ không hợp lệ");
                } else {
                    MonHoc mh = new MonHoc();
                    mh.setMaMonHoc(txtMaMon.getText());
                    mh.setTenMonHoc(txtTenMon.getText());
                    mh.setSoTinChi(Integer.parseInt(txtSoTC.getText()));
                    ds.suaMonHoc(mh);
                    txtMaMon.setText("");
                    txtTenMon.setText("");
                    txtSoTC.setText(null);
                    txtMaMon.requestFocus();
                    hienThi();
                }
            } else {
                JOptionPane.showMessageDialog(null, "Vui lòng điền đầy đủ thông tin");
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, ex.getMessage());
        }
    }//GEN-LAST:event_btnSuaActionPerformed

    private void btnMoiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMoiActionPerformed
        // TODO add your handling code here:
        txtTim.setText("");
        txtMaMon.setText("");
        txtTenMon.setText("");
        txtSoTC.setText(null);
        txtMaMon.requestFocus();

    }//GEN-LAST:event_btnMoiActionPerformed

    private void btnThoatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThoatActionPerformed
        // TODO add your handling code here:
        try {
            int result = JOptionPane.showConfirmDialog(null, "Bạn có muốn thoát không",
                    "Thông báo", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
            if (result == JOptionPane.YES_OPTION) {
                System.exit(0);
            } else {
                this.requestFocus();
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, ex.getMessage());
        }

    }//GEN-LAST:event_btnThoatActionPerformed

    private void tblQLMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblQLMouseClicked
        // TODO add your handling code here:
        try {
            MonHoc mh = new MonHoc((tblQL.getModel().getValueAt(tblQL.getSelectedRow(), 0).toString()),
                    (tblQL.getModel().getValueAt(tblQL.getSelectedRow(), 1).toString()),
                    Integer.parseInt(tblQL.getModel().getValueAt(tblQL.getSelectedRow(), 2).toString()));
            txtMaMon.setText(mh.getMaMonHoc());
            txtTenMon.setText(mh.getTenMonHoc());
            txtSoTC.setText("" + mh.getSoTinChi());
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, ex.getMessage());
        }

    }//GEN-LAST:event_tblQLMouseClicked

    private void cboTieuChiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboTieuChiActionPerformed
        // TODO add your handling code here:
        int i = cboTieuChi.getSelectedIndex();
        //JOptionPane.showMessageDialog(null, i);
        if (i == 0) {
            ds.sapXep̣̣MaMH();
        } else if (i == 1) {
            ds.sapXep̣̣TenMH();
        } else if (i == 2) {
            ds.sapXepSTC̣̣();
        }
        hienThi();

    }//GEN-LAST:event_cboTieuChiActionPerformed

    private void btnTimActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTimActionPerformed
        // TODO add your handling code here:
        String maMH = txtTim.getText();
        MonHoc mh = ds.timKiemMH(maMH);
        if (mh != null) {
            txtMaMon.setText(mh.getMaMonHoc());
            txtTenMon.setText(mh.getTenMonHoc());
            txtSoTC.setText(mh.getSoTinChi() + "");
        } else {
            lblTB.setText("Không tồn tại môn học này");
        }
    }//GEN-LAST:event_btnTimActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(frmQLMH.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(frmQLMH.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(frmQLMH.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(frmQLMH.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new frmQLMH().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnMoi;
    private javax.swing.JButton btnSua;
    private javax.swing.JButton btnThem;
    private javax.swing.JButton btnThoat;
    private javax.swing.JButton btnTim;
    private javax.swing.JButton btnXoa;
    private javax.swing.JComboBox<String> cboTieuChi;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblTB;
    private javax.swing.JTable tblQL;
    private javax.swing.JTextField txtMaMon;
    private javax.swing.JTextField txtSoTC;
    private javax.swing.JTextField txtTenMon;
    private javax.swing.JTextField txtTim;
    // End of variables declaration//GEN-END:variables

    private void hienThi() {
        DefaultTableModel dtm = (DefaultTableModel) tblQL.getModel();
        dtm.setColumnCount(0);
        dtm.setRowCount(0);
        dtm.addColumn("Ma mon hoc");
        dtm.addColumn("Ten mon hoc");
        dtm.addColumn("So tin chi");
        //JOptionPane.showMessageDialog(null, ds.toString());
        for (MonHoc mh : ds.getDsmh()) {
            dtm.addRow(new Object[]{mh.getMaMonHoc(), mh.getTenMonHoc(), mh.getSoTinChi()});
            tblQL.setModel(dtm);
        }
    }

    private boolean checkTinChi(String s) {
        if (s.length() == 0) {
            return false;
        }
        for (char c : s.toCharArray()) {
            if (!Character.isDigit(c)) {
                return false;
            }
        }
        return true;
    }
}
